# Importerer klasser fra andre lokale filer:
from hånd_spiller_dealer import *
from kort_og_kortstokk import *
import time

# Definerer en global variabel
spillere = []

"""
class Spiller(Hand):
    
Klasse som skal lage spiller-objekter.

Arver fra hand-objektet


    def __init__(self, navn):
        super().__init__()
        self.navn = navn
        self.pengesum = 2000
        self.bet = 0

    def genererHand(self):
        super().genererHand()

    def visHand(self):
        super().visHand()
        print(f"Navn: {self.navn}")
        print(f"Pengesum: {self.pengesum}kr")
        print(f"Satt veddesum: {self.bet}kr")

    def visHand2(self):
        super().visHand2()

    def finnSum(self):
        super().finnSum()

    def leggTilKort(self):
        super().leggTilKort()
"""

# Definerer noen funksjoner for brukervennlighet og funksjonalitet


def leggTilSpillere():
    print("Hei")
    antall = int(input("Hvor mange spillere ønsker du å legge til?: "))

    for i in range(antall):
        # Burde ha et navn til spilleren som da må lagres i hånd
        navn = input(f"Navnet til spiller {i+1}: ")

        # Lagrer hvert navn som et eget Hand-objekt
        spillere.append(Hand(navn))

def giHånd():
    for i in range(len(spillere)):
        spillere[i].genererHand()


leggTilSpillere()

sum = []
dealer = Dealer()
while True:
    # Valg av hva du vil gjøre
    print("\n\n\n\n\n\n\n\n\n\n\n\n\n\n")
    print("- - - - - - - - - - - - - - - - - - -")
    print("Skriv inn 's' for å starte spillet.")
    print("Skriv inn 'l' for å fjerne eller legge til spillere.")
    print("- - - - - - - - - - - - - - - - - - -")

    action = input("\nSkriv inn hvilke handling du vil gjøre: ")

    if action == "s":
        # Først lar vi spillerne velge hvor mye de vil vedde
        for i in range(len(spillere)):
            print(f"\n\nSPILLER: {spillere[i].navn}")
            while True:
                bet = int(input(f"Vennligst velg hvor mye du vil satse: "))
                if bet <= 0:
                    print("Du kan ikke vedde ingenting!")
                elif bet > spillere[i].pengesum:
                    print(
                        f"Du kan ikke vedde mer enn du har av penger! (pengesum = {spillere[i].pengesum}kr)")
                else:
                    break

            spillere[i].bet = bet

        # Deretter gir vi hver spiller en hånd å spille med
        for i in range(len(spillere)):
            spillere[i].kortPaHand = []
            print(spillere[i].genererHand())
            # Legg til greier fra Synne og Trygve sine nye koder (så de kan se kortene de får osv..)

        for i in range(len(spillere)):
            print("\n\n\n")
            print("- - - - - - - - - - - - - - - - - - - - -")
            print("\t\tBLACKJACK")
            print("- - - - - - - - - - - - - - - - - - - - -")
            print("Dealer:")
            dealer.visHandDealer()
            print("\n")
            for r in range(len(spillere)):
                # Printen oversikt over alle sine kort
                print(f"\nSpiller {r+1}({spillere[r].navn}):")
                spillere[r].visHand2()
                print(" ")

            # Space:
            print("\n\n")

            time.sleep(3)

            print("- - - - - - - - -")
            print("Oversikt       ⮝")
            print("Spillrunde     ⮟")
            print("- - - - - - - - -")
            print("\n\n")

            # Lar spiller i ta en omgang (hit / stand / bust)
            while True:
                # Se kort, se sum
                print(f"Spiller {i+1}: {spillere[i].navn}")
                spillere[i].visHand2()

                sum = spillere[i].finnSum()
                

                etl = 0

                for g in range(len(sum)):
                    if sum[g-etl] > 21:
                        sum.pop(g-etl)
                        etl+=1

                if sum == []:
                    print("Bust..")
                    spillere[i].endeligverdi = 22
                    break
                print(f"SUM: {sum}")
                if sum[0] == 21:
                    print("21!")
                    spillere[i].endeligverdi = 21
                    break
                else:
                    spillere[i].endeligverdi = sum[0]



                valg = input("HIT eller STAND? ").upper()
                if valg == "HIT":

                    spillere[i].leggTilKort()
                    # print(spillere[i].kortPaHand)

                elif valg == "STAND":
                    # Lagre resultatet til hver person
                    break

    elif action == "l":
        print("hei")
    
    while True:
        testVar = False
        
        print("Dealer:")
        dealer.visHand2()
        print(dealer.finnSum())
        print("\n")
        
        for r in range(len(spillere)):
            # Printen oversikt over alle sine kort
            print(f"\nSpiller {r+1}({spillere[r].navn}):")
            print(f"Poeng: {spillere[r].endeligverdi}")
                
        print(" ")
        if(testVar == False and dealer.finnSum()==[]):
            print("Du vant")
            time.sleep(5)
            break
        if(testVar == True and dealer.finnSum()!=[]):
            print("\n\n\n")
            print("You Loose")
            print("\n\n\n")
            time.sleep(5)
            break
        for h in range(len(spillere)):
            if (dealer.finnSum()[0] <= spillere[h].finnSum()[0] and spillere[h].finnSum()[0] < 22):
                testVar = True
        if(testVar == True):
            dealer.leggTilKort()
        etl2 = 0
        for j in range(len(dealer.finnSum())):
            if dealer.finnSum()[j-etl2] > 21:
                dealer.finnSum().pop(j-etl)
                etl2+=1
        time.sleep(3)
        
    

"""
NB!

LES!

FUNKSJONALITET!:

   OM MAN VELGER Å STARTE NESTE RUNDE:
   1. På rundgang på spillerne først velge hvor mye de selv vil vedde
        Denne summen fjernes da umiddelbart fra pengene deres

   2. Spiller 1 får 2 kort. finnSum() blir kjørt, så spilleren kan se hvor mye de totalt har.
        Trygve fikser sånn at det ser fint ut med at de kan se kortene sine fint osv..

        3. Spiller 1 velger mellom hit() og stand()

           - om stand() så går vi jo bare videre i programmet. Kanskje ikke engang en metode er trengt?
           - om hit() får spilleren enda et kort, den nye summen, og så lenge spilleren har under 21 i sum får han valget igjen og igjen..

    4. Deretter kjører vi sånn igjennom hver spiller.

    5. Når alle spillerene har spilt vil Dealer spille

        - Han hitter hver gang så lenge han enten har under 17 i sum / slår den høyeste summen til spillerne (!), eller når 21

    6. Deretter sjekker spillet om spillerne har vunnet
       
        - De som har det får dobla veddingen sin og det legges inn i pengesummen igjen
        - Ellers mister man pengene for godt


    - SLUTT - (vi får velge på nytt om å starte ny runde eller endre spillere eller hva som helst..)
"""
