# Importerer klasser fra andre lokale filer:
from hand import *
from kortstokk import *
import time


# LOGO - Blackjack the card game
print("                                                                      ")
print("                  _     _            _         _            _       _ ")
print("+------+         | |   | |          | |       (_)          | |     | |")
print("| A   +'-----+   | |__ | | __ _  ___| | __     _  __ _  ___| | __  | |")
print("|     | J  ♠ |   | '_ \| |/ _` |/ __| |/ /    | |/ _` |/ __| |/ /  |_|")
print("|     |      |   | |_) | | (_| | (__|   <     | | (_| | (__|   <    _ ")
print("| ♣   |      |   |_.__/|_|\__,_|\___|_|\_\    | |\__,_|\___|_|\_\  |_|")
print("+-----| ♠  J |                               _/ |                     ")
print("      +------+                              |__/                      ")


# Definerer en global variabel, spillerne som er med i spillet
spillere = []
#sum = []

# oppretter en dealer
dealer = Dealer()


# Definerer noen funksjoner for brukervennlighet og funksjonalitet
def leggTilSpillere():
    """
    Funksjon som oppretter spiller-objekter ut fra Hand-klassen
    """
    while True:
        try:
            while True:
                antall = abs(
                    int(input("Hvor mange spillere ønsker du å legge til?: ")))

                if antall > 5:
                    print("Antall spillere kan maksimalt være 5!\n")

                else:
                    break

            for i in range(antall):
                # Vi lager et navn som lagres i hånd-objektet vi lager!
                while True:
                    navn = input(f"Navnet til spiller {i+1}: ")

                    if navn == "":
                        print("Du må skrive inn et navn!")

                    # Sjekker om første bokstav i navnet er et mellomrom.. Dette tenker vi er fint å gjøre for hvordan navnene kan bli
                    elif navn != "":
                        if navn[0] == " ":
                            print("Navnet kan ikke starte med et mellomrom!")
                        else:
                            break

                # Lagrer hvert navn som et eget Hand-objekt
                spillere.append(Hand(navn))

            break

        except ValueError:
            print(
                "\n\x1B[3mFor anntall spillere\x1B[0m : \033[1mDu må skrive inn et tall! \033[0m\n")
            time.sleep(1)



# Kjører funksjonen over
leggTilSpillere()

# Kjører hovedprogrammet
while True:
    # Valg av hva du vil gjøre
    print("\n\n\n\n\n\n\n\n\n\n\n\n\n\n")
    print("- - - - - - - - - - - - - - - - - - -")
    print("Skriv inn 's' for å starte spillet.")
    print("Skriv inn 'l' for å fjerne eller legge til spillere.")
    print("- - - - - - - - - - - - - - - - - - -")

    action = input("\nSkriv inn hvilke handling du vil gjøre: ")


    # starter runden
    if action == "s":

        # Først sjekker vi om noen spillere fra en tidligere runde har 0 kroner igjen. De blir da fjernet fra spillet.
        # Vi lage en variabel som sjekker hvor mange spillere som ikke har igjen mer penger fra siste omgang
        fjernedeSpillere = 0

        # Vi går igjennom alle spillerne og sjekker om de har pengesummen 0 kr
        for r in range(len(spillere)):
            if spillere[r].pengesum == 0:
                # isåfall blir antallet spillere som kan fjernes 1 mer.
                fjernedeSpillere += 1

        # Om noen spillere kan fjernes:
        if fjernedeSpillere > 0:
            if fjernedeSpillere == 1:  # Om bare 1 skal fjernes:
                print("Forrige runde ble spiller:")
            elif fjernedeSpillere > 1:  # Om flere enn 1 skal fjernes
                print("Forrige runde ble spillerne:")
                
            for i in range(len(spillere)):
                # De som har 0 kr blir poppa fra spillere-lista osv..
                if spillere[r].pengesum == 0:
                    print(f"- {spillere[r].navn} fjernet fra spillet.")
                    spillere.pop(r)


        # Deretter lar vi de resterende spillerne velge hvor mye de vil vedde
        for i in range(len(spillere)):

            print(f"\n\nSPILLER: {spillere[i].navn}")

            while True:
                try:
                    bet = abs(float(input(f"Vennligst velg hvor mye du vil satse: ")))

                    if bet <= 0:
                        print("Du kan ikke vedde ingenting!")
                    elif bet > spillere[i].pengesum:
                        print(f"Du kan ikke vedde mer enn du har av penger! (pengesum = {spillere[i].pengesum}kr)")
                    else:
                        # fjerner bet fra "penger i banken" og lagrer bettesum
                        spillere[i].pengesum -= bet
                        spillere[i].bettesum = bet
                        break
                except ValueError:
                    print("Du må skrive inn et tall")

        # Deretter gir vi hver spiller en hånd å spille med
        
        # bygger en kortstokk
        kortstokk.kortstokk = []
        kortstokk.bygg()

        # lager en dealer-hånd
        dealer = Dealer()


        dealer.kortPaHand = []
        dealer.genererHand()
        
        for i in range(len(spillere)):
            spillere[i].kortPaHand = []
            print(spillere[i].genererHand())
            # Legg til greier fra Synne og Trygve sine nye koder (så de kan se kortene de får osv..)



        for i in range(len(spillere)):
            # printer spillet
            print("\n\n\n")
            print("- - - - - - - - - - - - - - - - - - - - -")
            print("\t\tBLACKJACK")
            print("- - - - - - - - - - - - - - - - - - - - -")

            # printer dealerhånd
            print("Dealer:")
            dealer.visHandDealer()
            print("\n")

            # printer alle spillernes fort
            for r in range(len(spillere)):
                print(f"\nSpiller {r+1}({spillere[r].navn}):")
                spillere[r].visHand2()
                print(" ")

            # Space:
            print("\n\n")

            # for å stoppe programmet i 3 sek
            time.sleep(3)

            # oversikt
            print("- - - - - - - - -")
            print("Oversikt       ⮝")
            print("Spillrunde     ⮟")
            print("- - - - - - - - -")
            print("\n\n")

            # Lar spiller i ta en omgang (hit / stand)
            while True:
                # viser kortene til spilleren som er i spill
                print(f"Spiller {i+1}: {spillere[i].navn}")
                spillere[i].visHand2()

                # liste med alle mulige summer
                sum = spillere[i].finnSum()
                
                # variabel og løkke for å fjerne summer over 21
                # som ville ført til automatisk bust
                etl = 0
                for g in range(len(sum)):
                    if sum[g-etl] > 21:
                        sum.pop(g-etl)
                        etl+=1

                # hvis ingen summer under 22, automatisk bust, løkka brytes
                if sum == []:
                    print("Bust..")
                    spillere[i].endeligverdi = 22     # for å lettere 'luke' ut spilleren senere
                    time.sleep(2)
                    break

                # printer sum-liste
                print(f"SUM: {sum}")

                # siden listen er sortert fungerer dette :)
                # bryter løkka, ikke mulig å hitte
                if sum[0] == 21:
                    print("21!")
                    spillere[i].endeligverdi = 21
                    time.sleep(2)
                    break
                else:
                    # for å finne den best mulige summen for spilleren
                    spillere[i].endeligverdi = sum[0]


                # gir valget til spilleren
                valg = input("HIT eller STAND? ").upper()

                if valg == "HIT":
                    # legger til kort
                    spillere[i].leggTilKort()

                    # print(spillere[i].kortPaHand)

                elif valg == "STAND":
                    # bryter løkka, best mulige verdi for spilleren er alledere lagret i en variabel
                    break
            # går så videre til neste spiller for å gjøre akkurat det samme

        # når hele runden er ferdig
        for r in range(len(spillere)):

            # Printen oversikt over alle sine kort
            print(f"\nSpiller {r+1}({spillere[r].navn}):")

            if spillere[r].endeligverdi > 21: 
                # hvis spilleren har bustet, printes dette
                print(f"{spillere[r].navn} : Bust")
                print(" ")
            else: 
                # spillerens best mulige verdi printes
                print(f"{spillere[r].navn} : {spillere[r].endeligverdi}")
                print(" ")
        
        time.sleep(2)
        
        # variabel for spillere har under 21 poeng, og må spille mot dealeren
        spillereSomKanVinne = []

        # printer resultatene med spillerne vi vet resultatene til
        for s in range(len(spillere)):

            # spillerne som har bustet
            if spillere[s].endeligverdi > 21: 
                print(f"{spillere[s].navn} : Bust")
                print("Du tapte spillet, og taper alt du bettet.")
                print(f"Din nåværende sum er {spillere[s].pengesum}.")
                print(" ")
                time.sleep(3)

            # spillere som automatisk har vunnet, summen = 21
            elif spillere[s].endeligverdi == 21: 
                print(f"{spillere[s].navn} : {spillere[s].endeligverdi}")
                print("Du har vunnet!")
                vinnesum = spillere[s].bettesum * 1.5
                spillere[s].pengesum += vinnesum
                print(f"Du vinner derfor {vinnesum}!")
                print(f"Din nåværende sum er {spillere[s].pengesum}.")
                time.sleep(3)

            # de som må spille mot dealer legges til i liste for videre kode
            else: 
                spillereSomKanVinne.append(spillere[s])

        # hvis det er noen som må spille mot dealeren
        if(spillereSomKanVinne != []):

            while True:
                
                # viser hele hånden til dealer
                print("Dealer:")
                dealer.visHand2()

                time.sleep(2)

                dealerSum = dealer.finnSum()

                """
                Tror dette blir gjort i dealer-klassen??
            
                dealerSum.sort()
                dealerSum.reverse()
                """

                # variabel og løkke for å fjerne verdier over 21
                essVar = 0
                for u in range(len(dealerSum)):
                    if(dealerSum[u-essVar] > 21):
                        dealerSum.pop(u-essVar)
                        essVar +=1
                
                # printer dealer sin(e) sum(mer)
                print(dealerSum)
                print("\n")
    
                # variabel for om dealeren må trekke kort
                trekkKort = False

                # variabel som trengs hvis fjerner spiller som kan vinne
                spillerVar = 0

                # sjekker om dealer vinner over spillere
                for w in range(len(spillereSomKanVinne)):

                    if(dealerSum != []):
                        # hvis spilleren har lavere sum enn dealeren
                        if(spillereSomKanVinne[spillerVar].endeligverdi < dealerSum[0]):
                            print(f"{spillereSomKanVinne[spillerVar].navn} har tapt for dealeren.")
                            print(f"{spillereSomKanVinne[spillerVar].navn} har derfor mistet bettingsummen,")
                            print(f"og har {spillereSomKanVinne[spillerVar].pengesum} igjen.")
                            print("\n\n")

                            # fjerner spilleren som ikke lenger har mulighet til å vinne
                            spillereSomKanVinne.pop(spillerVar)

                            time.sleep(4)
                        
                        # ellers skal dealeren trekke et nytt kort
                        else:
                            trekkKort = True
                            spillerVar += 1
                        
                        
                
                # dealer trekker nytt kort
                if(trekkKort == True):
                    dealer.leggTilKort()
                
                # dealer har slått alle spillerne, og alle spillerne taper
                elif(trekkKort == False and dealerSum != []):
        
                    print("Runden er ferdig.")
                    print("Dealeren vant over alle spillerne")

                    time.sleep(4)

                    break
                
                # dealer har bustet, alle spillerne som er igjen vinner
                elif(trekkKort == False and dealerSum == []):

                    print("Dealer bustet og tapte.")
                    print("\n\n")

                    time.sleep(2)

                    # printer resultatene for spillerne som har vunnet
                    for v in range(len(spillereSomKanVinne)):
                        """
                        print(v)
                        print(spillereSomKanVinne[v].navn)
                        print(spillereSomKanVinne[v].bettesum)
                        print(spillereSomKanVinne[v].pengesum)
                        """

                        print(f"{spillereSomKanVinne[v].navn} har vunnet!")
                        vinnesum = abs(float(spillereSomKanVinne[v].bettesum) * 2)
                        spillereSomKanVinne[v].pengesum += vinnesum
                        print(f"Du vinner derfor {vinnesum}!")
                        print(f"Din nåværende sum er {spillereSomKanVinne[v].pengesum}.")
                        print("\n")

                        time.sleep(1)
                    
                    break
      
        

    # gjøre endringer i spillet
    elif action == "l":
        print("\n\n\n")


        while True:
            print("Skriv '+' for å legge til spillere")
            print("Skriv '-' for å fjerne spillere")
            print("print 'o' for å avslutte, går tilbake til spillet")

            # ber om input
            edit = input("Valg: ")
            print("")

            # legger til en spiller
            if edit == "+":
                navn = input("Skriv inn navnet på den nye spilleren: ")

                # Lagrer hvert navn som et eget Hand-objekt
                spillere.append(Hand(navn))

                # Viser navnene til alle spillerne med den nye spilleren:
                print("\nNåværende spillere: ")
                for i in range(len(spillere)):
                    print("- ", spillere[i].navn)

                print("")
            
            # fjerner en spiller
            elif edit == "-":
                navn1 = input("Hva er navnet på spilleren du vil fjerne? ")

                # går gjennom lista med s
                # spillere og fjerner spilleren

                # OBS! får en feilmelding når et navn fjernes
                # løsning: legge til en 'hjelpevariabel'?
                spillerFinnes = False
                for i in range(len(spillere)):
                    if spillere[i].navn == navn1:
                        print(f"   #--------------------------------------------")
                        print(
                            f"   | Spiller '{navn1}' blir fjernet fra spillet ")
                        print(
                            f"   | Utbetalte penger: {spillere[i].pengesum}kr.")
                        print(f"   #--------------------------------- Sees snart!")
                        spillere.pop(i)
                        spillerFinnes = True
                        break
                    # legge til if her, hvis navnet ikke finnes
                if(spillerFinnes == False):
                    print(f"Spilleren du vil fjerne, '{navn1}', finnes ikke i spillet")
                    print("Spillerne som finnes er:")
                    for i in range(len(spillere)):
                        print("- ", spillere[i].navn)
            # går tilbake til spillet
            elif edit == "o":
                break
                
    elif action == "a":
        # Lager ASCII tekst
        print("\n\n\n\n\n\n\n\n\n\n\n ________                           _                                                     ")
        print("    /            /      /         /'  `                               ,   /   /           ")
        print("---/-------__---/-__---/-__-----_/__-----__---)__-------__------__-------/---/----__--_/_-")
        print("  /      /   ) /(     /(        /      /   ) /   )     (_ `   /   ) /   /   /   /___) /   ")
        print(
            "_/______(___(_/___\__/___\_____/______(___/_/_________(__)___/___/_/___/___/___(___ _(_ _")
        print("                                                            /                             ")

        time.sleep(2)

        # Sjekker ut resten av spillerne
        print("Resterende spillere blir fjernet og får utbetalt.\n")
        time.sleep(0.25)
        
        for i in range(len(spillere)):
            print(
                f" - Spiller {spillere[i].navn} blir utbetalt {spillere[i].pengesum}kr!")

            # Sjekker og printer ut en tilbakemelding om hvor mye penger personen tjente eller mistet.
            forskjell = spillere[i].pengesum - 100
            if forskjell < 0:
                print(
                    f"      > Dette er {abs(forskjell)}kr mindre enn startsummen. \033[1mBedre lykke neste gang!\033[0m\n\n")
            elif forskjell > 0:
                print(
                    f"      > Dette er {forskjell}kr mer enn startsummen. \033[Gratulerer!D\033[0m\n\n")
            elif forskjell == 0:
                print("     > Dette er like mye som vi startet med!\n\n")
            
            time.sleep(0.5)

        print("\033[1mSees snart igjen! >:D\033[0m\n")
        break

    else:
        print("Du må skrive inn 's', 'l' eller 'a'. ")

        
    else:
        print("Du må skrive inn 's', 'l', eller 'a'. ")

        

"""
NB!

LES!

FUNKSJONALITET!:

   OM MAN VELGER Å STARTE NESTE RUNDE:
   1. På rundgang på spillerne først velge hvor mye de selv vil vedde
        Denne summen fjernes da umiddelbart fra pengene deres

   2. Spiller 1 får 2 kort. finnSum() blir kjørt, så spilleren kan se hvor mye de totalt har.
        Trygve fikser sånn at det ser fint ut med at de kan se kortene sine fint osv..

        3. Spiller 1 velger mellom hit() og stand()

           - om stand() så går vi jo bare videre i programmet. Kanskje ikke engang en metode er trengt?
           - om hit() får spilleren enda et kort, den nye summen, og så lenge spilleren har under 21 i sum får han valget igjen og igjen..

    4. Deretter kjører vi sånn igjennom hver spiller.

    5. Når alle spillerene har spilt vil Dealer spille

        - Han hitter hver gang så lenge han enten har under 17 i sum / slår den høyeste summen til spillerne (!), eller når 21

    6. Deretter sjekker spillet om spillerne har vunnet
       
        - De som har det får dobla veddingen sin og det legges inn i pengesummen igjen
        - Ellers mister man pengene for godt


    - SLUTT - (vi får velge på nytt om å starte ny runde eller endre spillere eller hva som helst..)
"""
